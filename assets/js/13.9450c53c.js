(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{596:function(t,s,n){"use strict";n.r(s);var p=n(9),e=Object(p.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"什么是-typescript？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-typescript？"}},[t._v("#")]),t._v(" 什么是 TypeScript？")]),t._v(" "),n("p",[t._v("TypeScript，简称 ts，是微软开发的一种静态的编程语言，它是 JavaScript 的超集。 那么它有什么特别之处呢?")]),t._v(" "),n("p",[t._v("简单来说，js 有的 ts 都有，所有js 代码都可以在 ts 里面运行。\nts 支持类型支持，ts = type +JavaScript。")]),t._v(" "),n("p",[t._v("那么 ts 和 js 有什么区别呢？\nJavaScript 属于动态编程语言，而ts 属于静态编程语言。\njs：边解释边执行，错误只有在运行的时候才能发现\nts：先编译再执行，在写的时候就会发现错误了（ts不能直接执行，需要先编译成 js ）\nts 完全支持 js ，可以直接转换")]),t._v(" "),n("ol",{attrs:{start:"5"}},[n("li",[t._v("ts 有类型支持，有强大的代码类型提示")])]),t._v(" "),n("p",[t._v("相信大家现在对 ts 有一个基本的了解了，那么它应该怎么使用呢？ 首先先做一些简单的准备工作：")]),t._v(" "),n("p",[t._v("下载一个全局的包\nnpm i  -g  typescript\n或者\nyarn  global add  typescript\n复制代码\n打开cmd 输入命令 tsc -v 查看包是否下载成功")]),t._v(" "),n("p",[t._v("什么是类型注解？\n就是给变量添加类型约束，可以显示标记出代码中的意外行为，从而降低了发生错误的可能性 语法：")]),t._v(" "),n("p",[t._v("let 变量名: 类型 = 初始值\nlet age: number = 18\n复制代码\n这样写有啥好处捏？更好的规定了数据的类型，避免了不必要的错误。 如果你不小心写错了，他会直接提示你类型错误哦。是不是很贴心呢?")])])}),[],!1,null,null,null);s.default=e.exports}}]);